// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/opentelemetry/proto/collector/metrics/v1/metrics_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/nilebox/opentelemetry-proto-go-experimental/gen/metrics/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExportMetricsServiceRequest struct {
	// An array of ResourceMetrics.
	// For data coming from a single resource this array will typically contain one
	// element. Intermediary nodes (such as OpenTelemetry Collector) that receive
	// data from multiple origins typically batch the data before forwarding further and
	// in that case this array will contain multiple elements.
	ResourceMetrics      []*v1.ResourceMetrics `protobuf:"bytes,1,rep,name=resource_metrics,json=resourceMetrics,proto3" json:"resource_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ExportMetricsServiceRequest) Reset()         { *m = ExportMetricsServiceRequest{} }
func (m *ExportMetricsServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ExportMetricsServiceRequest) ProtoMessage()    {}
func (*ExportMetricsServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9119eb955533c175, []int{0}
}

func (m *ExportMetricsServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportMetricsServiceRequest.Unmarshal(m, b)
}
func (m *ExportMetricsServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportMetricsServiceRequest.Marshal(b, m, deterministic)
}
func (m *ExportMetricsServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportMetricsServiceRequest.Merge(m, src)
}
func (m *ExportMetricsServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ExportMetricsServiceRequest.Size(m)
}
func (m *ExportMetricsServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportMetricsServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportMetricsServiceRequest proto.InternalMessageInfo

func (m *ExportMetricsServiceRequest) GetResourceMetrics() []*v1.ResourceMetrics {
	if m != nil {
		return m.ResourceMetrics
	}
	return nil
}

type ExportMetricsServiceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportMetricsServiceResponse) Reset()         { *m = ExportMetricsServiceResponse{} }
func (m *ExportMetricsServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ExportMetricsServiceResponse) ProtoMessage()    {}
func (*ExportMetricsServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9119eb955533c175, []int{1}
}

func (m *ExportMetricsServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportMetricsServiceResponse.Unmarshal(m, b)
}
func (m *ExportMetricsServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportMetricsServiceResponse.Marshal(b, m, deterministic)
}
func (m *ExportMetricsServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportMetricsServiceResponse.Merge(m, src)
}
func (m *ExportMetricsServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ExportMetricsServiceResponse.Size(m)
}
func (m *ExportMetricsServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportMetricsServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExportMetricsServiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ExportMetricsServiceRequest)(nil), "opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest")
	proto.RegisterType((*ExportMetricsServiceResponse)(nil), "opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse")
}

func init() {
	proto.RegisterFile("proto/opentelemetry/proto/collector/metrics/v1/metrics_service.proto", fileDescriptor_9119eb955533c175)
}

var fileDescriptor_9119eb955533c175 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x0d, 0xc2, 0x0e, 0x11, 0x54, 0xea, 0x45, 0xa6, 0x88, 0xf4, 0x34, 0xd0, 0x26, 0x6c,
	0x7e, 0x83, 0xe1, 0xbc, 0x89, 0xa3, 0xde, 0x76, 0x19, 0x36, 0x3c, 0x6a, 0x20, 0xcd, 0x8b, 0x49,
	0x5a, 0xba, 0x0f, 0xe2, 0xc1, 0xef, 0xe0, 0x87, 0x94, 0x35, 0x55, 0x09, 0x16, 0x19, 0xec, 0x16,
	0xfe, 0x79, 0xbf, 0xdf, 0x7b, 0x09, 0x8f, 0xde, 0x1b, 0x8b, 0x1e, 0x39, 0x1a, 0xd0, 0x1e, 0x14,
	0x54, 0xe0, 0xed, 0x86, 0x87, 0x4c, 0xa0, 0x52, 0x20, 0x3c, 0x5a, 0xbe, 0x4d, 0xa5, 0x70, 0xbc,
	0x99, 0x7e, 0x1f, 0xd7, 0x0e, 0x6c, 0x23, 0x05, 0xb0, 0xae, 0x34, 0x99, 0x44, 0x7c, 0x08, 0xd9,
	0x0f, 0xcf, 0x7a, 0x88, 0x35, 0xd3, 0xf1, 0xed, 0x50, 0xa7, 0xbf, 0xfe, 0xa0, 0x48, 0x37, 0xf4,
	0x62, 0xd1, 0x1a, 0xb4, 0xfe, 0x31, 0xc4, 0xcf, 0xa1, 0x6b, 0x0e, 0x6f, 0x35, 0x38, 0x9f, 0xac,
	0xe8, 0xa9, 0x05, 0x87, 0xb5, 0x15, 0xb0, 0xee, 0xc1, 0x73, 0x72, 0x7d, 0x38, 0x39, 0x9a, 0x71,
	0x36, 0x34, 0xd1, 0xef, 0x1c, 0x2c, 0xef, 0xb9, 0x5e, 0x9c, 0x9f, 0xd8, 0x38, 0x48, 0xaf, 0xe8,
	0xe5, 0x70, 0x6b, 0x67, 0x50, 0x3b, 0x98, 0x7d, 0x12, 0x7a, 0x1c, 0x5f, 0x25, 0x1f, 0x84, 0x8e,
	0x02, 0x93, 0x2c, 0xd8, 0xae, 0x3f, 0xc2, 0xfe, 0x79, 0xe0, 0xf8, 0x61, 0x5f, 0x4d, 0x18, 0x36,
	0x3d, 0x98, 0xbf, 0x13, 0x7a, 0x23, 0x71, 0x67, 0xdd, 0xfc, 0x2c, 0x36, 0x2d, 0xb7, 0x95, 0x4b,
	0xb2, 0x7a, 0x2a, 0xa5, 0x7f, 0xad, 0x0b, 0x26, 0xb0, 0xe2, 0x5a, 0x2a, 0x28, 0xb0, 0x8d, 0x77,
	0x27, 0xeb, 0x9c, 0x59, 0x89, 0x19, 0xb4, 0x06, 0xac, 0xac, 0x40, 0xfb, 0x17, 0xc5, 0x4b, 0xd0,
	0x83, 0xfb, 0x54, 0x8c, 0xba, 0xfa, 0xbb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xe4, 0xc9,
	0x23, 0x88, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetricsServiceClient is the client API for MetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricsServiceClient interface {
	// For performance reasons, it is recommended to keep this RPC
	// alive for the entire life of the application.
	Export(ctx context.Context, in *ExportMetricsServiceRequest, opts ...grpc.CallOption) (*ExportMetricsServiceResponse, error)
}

type metricsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetricsServiceClient(cc *grpc.ClientConn) MetricsServiceClient {
	return &metricsServiceClient{cc}
}

func (c *metricsServiceClient) Export(ctx context.Context, in *ExportMetricsServiceRequest, opts ...grpc.CallOption) (*ExportMetricsServiceResponse, error) {
	out := new(ExportMetricsServiceResponse)
	err := c.cc.Invoke(ctx, "/opentelemetry.proto.collector.metrics.v1.MetricsService/Export", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricsServiceServer is the server API for MetricsService service.
type MetricsServiceServer interface {
	// For performance reasons, it is recommended to keep this RPC
	// alive for the entire life of the application.
	Export(context.Context, *ExportMetricsServiceRequest) (*ExportMetricsServiceResponse, error)
}

// UnimplementedMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricsServiceServer struct {
}

func (*UnimplementedMetricsServiceServer) Export(ctx context.Context, req *ExportMetricsServiceRequest) (*ExportMetricsServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Export not implemented")
}

func RegisterMetricsServiceServer(s *grpc.Server, srv MetricsServiceServer) {
	s.RegisterService(&_MetricsService_serviceDesc, srv)
}

func _MetricsService_Export_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportMetricsServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricsServiceServer).Export(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opentelemetry.proto.collector.metrics.v1.MetricsService/Export",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricsServiceServer).Export(ctx, req.(*ExportMetricsServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opentelemetry.proto.collector.metrics.v1.MetricsService",
	HandlerType: (*MetricsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Export",
			Handler:    _MetricsService_Export_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/opentelemetry/proto/collector/metrics/v1/metrics_service.proto",
}
